git status _파일의 변경상태 감지
빨 - 전 

git init _.git 파일 생성
git add .  _모든 파일 선택
git status _초록색 = 올라갈 준비 완

버전 = commit

git commit = 버전 만들기
git commit -m "설명추가"_(m=설명을 다는거)

git log_commit _commit 다 나옴

github 원격저장소 생성
	주소 생김

git remote add origin 주소복붙
origin 별명으로 주소 등록
	git remote -v 주소 제대로 들어갔나 확인
	git push origin main = origin에 밀어넣겠다
 
	*git pull origin main - github에서 파일 내려받는법



1 [커밋 메세지 룰과 작성법]
첫번째 라인 : 제목(필수)
두번째 라인 : 공란
세번째 라인부터 : 내용작성/무엇을/왜(선택)
마지막 라인 : 꼬리말(#이슈넘버_선택)

작성 팁 : 최대한 구체적으로 작성, 주간 보고 그대로 쓸 정도로 작성

2 [왜 굳이 git add -> commit  두 단계에 걸쳐서 하는지?]
모든 파일을 굳이 다 기록할 필요가 없기때문 
버전을 여러개로 나눠서 만들고 싶은 경우
1_git add로 기록할 파일을 고름
2_git commit으로 버전 생성(기록 완료)

3_커밋 전에 diff확인하기!(매우 좋은 습관)
명령어 git diff/git difftool인데 보기 불편함

4_언제, 얼마나 commit하는게 좋을까?
간단한 기능을 하나 추가 할 떄 마다 commit 하면 됨

ex)회원가입 기능 만들 때
- 회원 가입 폼 레이아웃 UI를 만들면 commit 
- 입력한 이메일이 맞는지 검증하는 기능(유효성 검사)을 만들었으면 commit
- 서버에 데이터를 전송하는 기능을 만들었으면 commit

대충 이렇게 작은 작업 하나를 마칠때마다 commit하는게 좋음
물론 3개 다 만들고 commit해도 됨
중요한건 하루 1개 이상 커밋 할 것!(좋은 습관)

