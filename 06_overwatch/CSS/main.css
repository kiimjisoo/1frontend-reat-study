/* (중요)
  CSS 코드가 길어지면 선택자 찾기가 어렵기에
  모든 CSS코드는 HTML구조에 맞게 작성하는게 좋음
*/
body {
  /* 뷰포트 하이트에 100% 맞춤 */
  height: 100vh;
  background-image: url(../images/bg.jpg);
  background-repeat: no-repeat;
  /* 바디태그의 가장 넓은 너비에 맞춤 */
  background-size: cover;
  /* 배경 이미지 고정 */
  background-attachment: fixed;
}
.container {
  padding: 50px 0;
}
.container .heroes {
  display: flex;
  /* 기본적으로 줄바꿈되지 않고 
    기본 감소 너비 비율이 1이어서 한 줄에 모든 요소가 표시
  */
  flex-wrap: wrap;
  /* background-color: orange; 화면 확인위해*/
  justify-content: center;
  max-width: 700px;

  /* flex로도 정렬이 가능하지만 더 복잡함 */
  /* margin으로 가운데 정렬하기 위한 조건: 
    블록 요소에 가로 사이즈가 명시되어 있는 경우!
  */
  margin: 0 auto;
  padding: 40px 20px;
}
.container .heroes .hero {
  width: 80px;
  height: 84px;
  margin: 4px;
  background-color: #555;

  border: 3px solid #fff;
  transform: skewX(-14deg);
  
  border-radius: 10px;
  box-sizing: border-box;

  /* 확대효과를 좀 더 자연스럽게 전환효과 추가 호버에 넣으면 마우스 올렸을때만 동작*/
  /* transition: 1s; 모든 속성에 적용*/
  /* 개별 적용 시,css속성마다 쉼표로 구분  */
  transition: 
    transform .1s,
    background-color .6s;
  /* 넘치는 이미지 지워줌 넘치는 애의 부모에 넣어야함!!!!! */
    overflow: hidden;
}

/* Quiz:캐릭터에 마우스 올렸을 때 배경색(#ff9c00) 변경 및 확대(1.3배) */

.container .heroes .hero:hover {
  background-color: #ff9c00;
  /* transform: scale(1.3); transform 속성을 덮어쓰면서 기울임이 없어짐 */
  transform: skew(-14deg) scale(1.3) ;
  z-index: 1; /*position 값이 없어도 Flex Item이라 사용 가능*/
}

/* 공통스타일 */
.container .heroes .hero .image {
  width: 140%;
  height: 100%;
  background-position: center;
  /* background-size: cover; */
  background-size: 90px;
  /* 반복 멈춤 */
  background-repeat: no-repeat;
  /* translateX(-16px) 왼쪽으로 이동 */
  transform: skew(14deg) translateX(-16px);

}

/* 개별 스타일 */
.container .heroes .hero:nth-child(1) .image {background-image: url("../images/hero1.png");}
.container .heroes .hero:nth-child(2) .image { background-image: url("../images/hero2.png"); }
.container .heroes .hero:nth-child(3) .image { background-image: url("../images/hero3.png"); }
.container .heroes .hero:nth-child(4) .image { background-image: url("../images/hero4.png"); }
.container .heroes .hero:nth-child(5) .image { background-image: url("../images/hero5.png"); }
.container .heroes .hero:nth-child(6) .image { background-image: url("../images/hero6.png"); }
.container .heroes .hero:nth-child(7) .image { background-image: url("../images/hero7.png"); }
.container .heroes .hero:nth-child(8) .image { background-image: url("../images/hero8.png"); }
.container .heroes .hero:nth-child(9) .image { background-image: url("../images/hero9.png"); }
.container .heroes .hero:nth-child(10) .image { background-image: url("../images/hero10.png"); }

.container .heroes .hero:nth-child(11) .image { background-image: url("../images/hero11.png"); }
.container .heroes .hero:nth-child(12) .image { background-image: url("../images/hero12.png"); }
.container .heroes .hero:nth-child(13) .image { background-image: url("../images/hero13.png"); }
.container .heroes .hero:nth-child(14) .image { background-image: url("../images/hero14.png"); }
.container .heroes .hero:nth-child(15) .image { background-image: url("../images/hero15.png"); }
.container .heroes .hero:nth-child(16) .image { background-image: url("../images/hero16.png"); }
.container .heroes .hero:nth-child(17) .image { background-image: url("../images/hero17.png"); }
.container .heroes .hero:nth-child(18) .image { background-image: url("../images/hero18.png"); }
.container .heroes .hero:nth-child(19) .image { background-image: url("../images/hero19.png"); }
.container .heroes .hero:nth-child(20) .image { background-image: url("../images/hero20.png"); }

.container .heroes .hero:nth-child(21) .image { background-image: url("../images/hero21.png"); }
.container .heroes .hero:nth-child(22) .image { background-image: url("../images/hero22.png"); }
.container .heroes .hero:nth-child(23) .image { background-image: url("../images/hero23.png"); }
.container .heroes .hero:nth-child(24) .image { background-image: url("../images/hero24.png"); }
.container .heroes .hero:nth-child(25) .image { background-image: url("../images/hero25.png"); }
.container .heroes .hero:nth-child(26) .image { background-image: url("../images/hero26.png"); }
.container .heroes .hero:nth-child(27) .image { background-image: url("../images/hero27.png"); }
.container .heroes .hero:nth-child(28) .image { background-image: url("../images/hero28.png"); }
.container .heroes .hero:nth-child(29) .image { background-image: url("../images/hero29.png"); }
.container .heroes .hero:nth-child(30) .image { background-image: url("../images/hero30.png"); }

.container .heroes .hero:nth-child(31) .image { background-image: url("../images/hero31.png"); }
.container .heroes .hero:nth-child(32) .image { background-image: url("../images/hero32.png"); }

.container .logo {
  max-width: 300px;
  /* 가로 사이즈를 갖는 블록 요소 하나를 가운데로 정렬하고 싶다면
  flex대신에 margin을 이용하면 간단 */
  margin: 0 auto;
  /* 창이 줄었을때 딱 붙는게 싫으면 상하0좌우20 */
  padding: 0 20px;
}
.container .logo img {
  /* 부모 요소 가로 너비에 100%, 300px보다 커질 수 없음 */
  width: 100%;
}
